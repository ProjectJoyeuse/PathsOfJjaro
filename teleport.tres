[gd_resource type="ShaderMaterial" load_steps=13 format=2]

[ext_resource path="res://unknown.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=2]
function = 23

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=6]
uniform_name = "TextureUniform"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 2

[sub_resource type="VisualShaderNodeVectorOp" id=12]

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 12

[sub_resource type="VisualShader" id=14]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D TextureUniform : hint_black_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(SCREEN_UV,0.0);

// Input:6
	float n_out6p0;
	n_out6p0 = TIME;

// ScalarFunc:7
	float n_out7p0;
	n_out7p0 = tan(n_out6p0);

// ScalarFunc:9
	float n_out9p0;
	n_out9p0 = abs(n_out7p0);

// ScalarFunc:10
	float n_out10p0;
	n_out10p0 = cos(n_out6p0);

// ScalarFunc:11
	float n_out11p0;
	n_out11p0 = degrees(n_out10p0);

// ScalarOp:12
	float n_out12p0;
	n_out12p0 = n_out9p0 * n_out11p0;

// ScalarFunc:13
	float n_out13p0;
	n_out13p0 = tan(n_out12p0);

// VectorOp:8
	vec3 n_out8p0;
	n_out8p0 = n_out3p0 + vec3(n_out13p0);

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture( TextureUniform , n_out8p0.xy );
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -359, -250 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 820, 120 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( 620, -60 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 60, 300 )
nodes/fragment/6/node = SubResource( 10 )
nodes/fragment/6/position = Vector2( -380, 140 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( -160, 60 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( 500, 180 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -80, 140 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -160, 280 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -80, 200 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 120, 140 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 300, 180 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 6, 0, 7, 0, 8, 0, 2, 0, 3, 0, 8, 0, 7, 0, 9, 0, 6, 0, 10, 0, 10, 0, 11, 0, 11, 0, 12, 1, 9, 0, 12, 0, 12, 0, 13, 0, 13, 0, 8, 1 )

[resource]
shader = SubResource( 14 )
shader_param/TextureUniform = ExtResource( 1 )
